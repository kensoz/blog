import{_ as o,o as p,c,a as n,d as e,b as s,e as t,r as i}from"./app.a5ec93c6.js";const l={},r=n("h1",{id:"javascript\u968E\u4E57",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#javascript\u968E\u4E57","aria-hidden":"true"},"#"),s(" JavaScript\u968E\u4E57")],-1),u=n("p",null,[n("img",{src:"https://img.shields.io/badge/-Typescript-9ca3af.svg?logo=typescript&style=popout-square",alt:""}),s(),n("img",{src:"https://img.shields.io/badge/-Javascript-9ca3af.svg?logo=javascript&style=popout-square",alt:""})],-1),d=s("\u{1F4E1} "),k={href:"https://qiita.com/kensoz/items/223d40cab4b62a431626",target:"_blank",rel:"noopener noreferrer"},m=s("Qiita"),v=n("h2",{id:"\u521D\u3081\u306B",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u521D\u3081\u306B","aria-hidden":"true"},"#"),s(" \u521D\u3081\u306B")],-1),b=s("\u{1F310} "),h={href:"https://codepen.io/kensoz/pen/dyeEqMv",target:"_blank",rel:"noopener noreferrer"},_=s("live demo"),f=t(`<ul><li>\u30D1\u30E9\u30E1\u30FC\u30BF<code>n</code> : n \u306E\u968E\u4E57</li></ul><h2 id="\u518D\u5E30\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u518D\u5E30\u65B9\u6CD5" aria-hidden="true">#</a> \u518D\u5E30\u65B9\u6CD5</h2><h3 id="number\u578B" tabindex="-1"><a class="header-anchor" href="#number\u578B" aria-hidden="true">#</a> Number\u578B</h3><p><code>Number\u578B</code>\u306E\u9069\u7528\u7BC4\u56F2\u306F\u3001\u6700\u5927 <code>9007199254740991</code> (<code>2^53 \u2212 1</code>)\u3001\u6700\u5C0F <code>\u22129007199254740991</code> (<code>\u2212(2^53 \u2212 1)</code>)\u3067\u3059\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">factorial_recursion</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> n <span class="token operator">*</span> <span class="token function">factorial_recursion</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">factorial_recursion</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//120</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="bigint\u578B" tabindex="-1"><a class="header-anchor" href="#bigint\u578B" aria-hidden="true">#</a> BigInt\u578B</h3>`,6),g=n("code",null,"BigInt\u578B",-1),y=s("\u306E\u9069\u7528\u7BC4\u56F2\u306F\u3001"),x=n("code",null,"Number\u578B",-1),j=s("\u3067\u8868\u3059\u3053\u3068\u304C\u3067\u304D\u306A\u3044\u5927\u304D\u306A\u6570\u3092\u8868\u73FE\u3057\u305F\u308A\u64CD\u4F5C\u3057\u305F\u308A\u3059\u308B\u305F\u3081\u306B\u4F7F\u7528\u3057\u307E\u3059\u3002"),w={href:"https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Global_Objects/BigInt",target:"_blank",rel:"noopener noreferrer"},I=s("BigInt MDN"),B=t(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">factorial_recursion_bigInt</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token function">BigInt</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token function">BigInt</span><span class="token punctuation">(</span><span class="token function">factorial_recursion_bigInt</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">factorial_recursion_bigInt</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//120n</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u3057\u3001\u518D\u5E30\u95A2\u6570\u3067<code>n</code>\u306E\u5024\u304C\u5927\u304D\u304F\u306A\u308B\u3068\u3001\u30B9\u30BF\u30C3\u30AF\u30AA\u30FC\u30D0\u30FC\u30A8\u30E9\u30FC\u306B\u306A\u3063\u3066\u3057\u307E\u3046\u3068\u3044\u3046\u554F\u984C\u304C\u3042\u308A\u307E\u3059\u3002\u4F8B\u3048\u3070\u3001<code>factorial_recursion_bigInt(10000)</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">factorial_recursion_bigInt</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span> 
<span class="token comment">// Maximum call stack size exceeded</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>BigInt\u578B</code>\u304C\u6D3B\u7528\u3067\u304D\u3066\u3001\u30B9\u30BF\u30C3\u30AF\u30AA\u30FC\u30D0\u30FC\u30A8\u30E9\u30FC\u304C\u56DE\u907F\u3055\u308C\u308B\u305F\u3081\u3001\u5E73\u65B9\u306E\u5DEE\u65B9\u6CD5\u3067\u89E3\u6C7A\u3057\u307E\u3059\u3002</p><h2 id="\u5E73\u65B9\u306E\u5DEE\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5E73\u65B9\u306E\u5DEE\u65B9\u6CD5" aria-hidden="true">#</a> \u5E73\u65B9\u306E\u5DEE\u65B9\u6CD5</h2><p>\u968E\u4E57\u306E\u8A08\u7B97\u56DE\u6570\u3092\u6E1B\u3089\u3059\u3068\u3044\u3046\u89B3\u70B9\u304B\u3089\u3001\u968E\u4E57\u306F\u3044\u304F\u3064\u304B\u306E\u5E73\u65B9\u306E\u5DEE\u306E\u7A4D\u306B\u5909\u63DB\u3067\u304D\u307E\u3059\u305F\u3081\u3001 <code>n/2</code>\u306E\u4E57\u7B97\u3059\u308B\u3060\u3051\u3067\u304D\u3066\u3001\u5E73\u65B9\u306E\u5DEE\u306E\u5DEE\u306F\u9023\u7D9A\u3059\u308B\u5947\u6570\u3092\u77E5\u308A\u307E\u3057\u305F\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">factorial_square</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token number">1</span>

	<span class="token keyword">const</span> middle <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">let</span> tmp <span class="token operator">=</span> middle <span class="token operator">*</span> middle
	<span class="token keyword">let</span> result <span class="token operator">=</span> n <span class="token operator">&amp;</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">?</span> middle <span class="token operator">:</span> middle <span class="token operator">*</span> n

	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		tmp <span class="token operator">-=</span> i
		result <span class="token operator">=</span> <span class="token function">BigInt</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token function">BigInt</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span>
	<span class="token punctuation">}</span>

	<span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">factorial_square</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 120n</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">factorial_square</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 28462596809170...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function N(q,z){const a=i("ExternalLinkIcon");return p(),c("div",null,[r,u,n("p",null,[d,n("a",k,[m,e(a)])]),v,n("p",null,[b,n("a",h,[_,e(a)])]),f,n("p",null,[g,y,x,j,n("a",w,[I,e(a)])]),B])}var M=o(l,[["render",N],["__file","factorial.html.vue"]]);export{M as default};
